{"version":3,"sources":["reducers/index.js","reducers/houseReducer.js","reducers/loadingReducer.js","reducers/nameReducer.js","reducers/errorReducer.js","reducers/spellsReducer.js","reducers/foundSpellReducer.js","reducers/favouritesReducer.js","apiCalls.js","actions/index.js","Containers/HouseForm/HouseForm.js","Containers/NavBar/NavBar.js","Containers/SpellBook/SpellBook.js","Containers/SpellsForm/SpellsForm.js","Containers/SpellsFilter/SpellsFilter.js","Containers/SpellsContainer/SpellsContainer.js","Containers/FavouritesContainer/FavouritesContainer.js","Components/App/App.js","serviceWorker.js","index.js"],"names":["rootReducer","combineReducers","userHouse","state","action","type","house","isLoading","bool","nameOfWizard","name","errorMsg","error","spellBook","spells","selectedSpell","foundSpell","favouriteSpells","id","filter","getHouses","a","fetch","response","json","data","ok","Error","getSpells","hasSpells","searchedSpell","addFavourite","deleteFavourite","HouseForm","handleChange","e","setState","target","value","foundHouse","props","givenHouse","wizardsName","resp","foundSpells","hasError","updateResp","map","spell","isFavourite","isEnabled","this","length","className","placeholder","onChange","src","alt","to","onClick","disabled","Component","connect","dispatch","bindActionCreators","SpellBook","toggleFavourite","_id","chosenFavourite","includes","effect","toggleWand","SpellsForm","findSpell","preventDefault","chosenSpell","toLowerCase","resetInputs","backToAllSpells","SpellsFilter","filterSpells","completeSpells","key","favSpell","find","App","exact","path","render","Boolean","window","location","hostname","match","store","createStore","composeWithDevTools","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.64ad46cb.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\nimport { userHouse } from './houseReducer';\nimport { isLoading } from './loadingReducer';\nimport { nameOfWizard } from './nameReducer';\nimport { errorMsg } from './errorReducer';\nimport { spellBook } from './spellsReducer';\nimport { selectedSpell } from './foundSpellReducer';\nimport { favouriteSpells } from './favouritesReducer';\n\nconst rootReducer = combineReducers({\n    userHouse,\n    isLoading,\n    nameOfWizard,\n    errorMsg,\n    spellBook,\n    selectedSpell,\n    favouriteSpells\n});\n\nexport default rootReducer;","export const userHouse = (state = '', action) => {\n    switch(action.type) {\n        case 'GIVEN_HOUSE':\n          return action.house;\n        default:\n          return state;\n    }\n}","export const isLoading = (state = false, action) => {\n  switch(action.type) {\n      case 'IS_LOADING':\n        return action.bool;\n      default:\n        return state;\n  }\n}","export const nameOfWizard = (state = '', action) => {\n    switch(action.type) {\n        case 'NAME':\n          return action.name;\n        default:\n          return state;\n    }\n}","export const errorMsg = (state = '', action) => {\n  switch(action.type) {\n    case 'HAS_ERROR':\n      return action.error;\n    default:\n      return state;\n  }\n}","export const spellBook = ( state = [], action ) => {\n  switch(action.type) {\n    case 'HAS_SPELLS': \n      return action.spells;\n    default:\n      return state;\n  }\n}","export const selectedSpell = ( state = [], action) => {\n  switch(action.type) {\n    case 'SEARCHED_SPELL':\n    return action.foundSpell;\n    default:\n      return state;\n  }\n} ","export const favouriteSpells = ( state = [], action ) => {\n    switch(action.type) {\n        case 'ADD_FAVOURITE':\n          return [...state, action.id];\n        case 'DELETE_FAVOURITE':\n          return state.filter((id) => id !== action.id);\n        default:\n          return state;\n    }  \n} ","const apiKey = `$2a$10$s7FC7dj4ik0afkB/Dnr4Ju6NXS0Os8RtRntk97bi8gx.KqvmqgNgK`;\n\nexport const getHouses = async () => {\n    const response = await fetch(`https://www.potterapi.com/v1/sortingHat`);\n    const data = await response.json();\n\n    if(!response.ok) {\n      throw new Error('No Houses Found!');\n    } else {\n      return data;\n    }\n}\n\nexport const getSpells = async () => {\n  const response = await fetch(`https://www.potterapi.com/v1/spells?key=${apiKey}`);\n  const data = await response.json();\n\n  if(!response.ok) {\n    throw new Error('No Spells Found!');\n  } else {\n    return data;\n  }\n}","export const givenHouse = (house) => ({\n    type: 'GIVEN_HOUSE',\n    house\n}); \n\nexport const isLoading = (bool) => ({\n    type: 'IS_LOADING',\n    bool\n});\n\nexport const wizardsName = (name) => ({\n  type: 'NAME',\n  name\n});\n\nexport const hasError = (error) => ({\n  type: 'HAS_ERROR',\n  error\n});\n\nexport const hasSpells = (spells) => ({\n  type: 'HAS_SPELLS',\n  spells\n});\n\nexport const searchedSpell = (foundSpell) => ({\n  type: 'SEARCHED_SPELL',\n  foundSpell\n})\n\nexport const addFavourite = (id) => ({\n  type: 'ADD_FAVOURITE',\n  id\n})\n\nexport const deleteFavourite = (id) => ({\n  type: 'DELETE_FAVOURITE',\n  id\n})","import React, { Component } from 'react';\nimport './HouseForm.css';\nimport { getHouses, getSpells } from '../../apiCalls';\nimport { connect } from 'react-redux';\nimport { givenHouse, isLoading, wizardsName, hasSpells, searchedSpell } from '../../actions';\nimport { Link } from 'react-router-dom';\nimport { bindActionCreators } from 'redux';\nimport { PropTypes } from 'prop-types';\n\nexport class HouseForm extends Component {\n    constructor() {\n      super();\n      this.state = {\n        name : '',\n        hasError: ''\n      }\n    }\n\n    handleChange = (e) => {\n      this.setState({ [e.target.name] : e.target.value })\n    }\n\n    foundHouse = async () => {\n        const { givenHouse, wizardsName, isLoading } = this.props;\n        const { name } = this.state;\n      try {\n        const resp = await getHouses();\n        // { isLoading && <LoadingPage /> }\n        givenHouse(resp);\n        wizardsName(name);\n        isLoading(false);\n        this.foundSpells();\n    } catch (error) {\n        this.setState({ hasError : error });\n    }\n  }\n\n   foundSpells = async () => {\n     const { hasSpells, searchedSpell } = this.props;\n     try {\n       const resp = await getSpells();\n       let updateResp = resp.map((spell) => {\n         spell.isFavourite = false;\n         return spell;\n       });\n       hasSpells(updateResp);\n       searchedSpell(updateResp);\n     } catch (error) {\n      this.setState({ hasError : error });\n     }\n   }\n\nrender() {\n  const { name } = this.state;\n  const isEnabled = name.length > 0;\n      return (\n          <section className='form-section'>\n              <form className='house-form'>\n                  <div className='banner'>\n                    <input className='wizard-name'\n                         type='text'\n                         placeholder='Name Here' \n                         name='name' \n                         value={this.state.name} \n                         onChange={this.handleChange} />\n                    <img className='name-banner' src='https://www.pinclipart.com/picdir/big/10-101144_vintage-banner-vector-png-theveliger-clipart-vintage-banner.png' alt='banner name' />\n                  </div>\n                  { isEnabled ? (\n                   <Link to='/spells' onClick={this.foundHouse} disabled={!isEnabled} > \n                      <div className='sorting-container'>\n                        <img className='sorting-button' src='https://cdn.shopify.com/s/files/1/0221/1146/products/Sorting_Hat_pin_badge_scaled_grande.png?v=1551715337' alt='sorting hat' />\n                        <h3 className='submit-text'>Enter</h3>\n                      </div>\n                   </Link> \n                   ) : (\n                    <div className='sorting-hat'>\n                      <img className='sorting-button-invalid' src='https://cdn.shopify.com/s/files/1/0221/1146/products/Sorting_Hat_pin_badge_scaled_grande.png?v=1551715337' alt='sorting hat' />\n                      <h3 className='submit-hat'>Enter Name</h3>\n                    </div>\n                   )}\n              </form>\n          </section>\n      )\n    }\n}\n\nexport const mapDispatchToProps = (dispatch) => (\n   bindActionCreators({\n     givenHouse: house => dispatch( givenHouse(house) ),\n     isLoading: bool => dispatch( isLoading(bool) ),\n     wizardsName: name => dispatch( wizardsName(name) ),\n     hasSpells: spells => dispatch( hasSpells(spells) ),\n     searchedSpell: spell => dispatch( searchedSpell(spell) )\n   }, dispatch)\n)\n\nHouseForm.propTypes = {\n  givenHouse: PropTypes.string,\n  isLoading: PropTypes.bool,\n  wizardsName: PropTypes.string,\n  hasSpells: PropTypes.string,\n  searchedSpell: PropTypes.func\n}; \n\n\nexport default connect(null, mapDispatchToProps)(HouseForm);","import React from 'react';\nimport { connect } from 'react-redux';\nimport './NavBar.css';\nimport { Link, NavLink } from 'react-router-dom'; \nimport { PropTypes } from 'prop-types';\n\nexport const NavBar = ({userHouse, nameOfWizard}) => {\n    return ( \n        <nav>\n            <h2>{nameOfWizard} Potter </h2>\n            <Link to='/'>\n              {userHouse === 'Gryffindor' && <img className='mascot-img' src='https://vignette.wikia.nocookie.net/thedailyquibbler/images/0/00/Gryffindor.gif/revision/latest/scale-to-width-down/240?cb=20140719233928' alt='Gryffindor mascot'/> }\n              {userHouse === 'Hufflepuff' && <img className='mascot-img' src='http://www.colleenmarielynch.com/Hufflepuff/crest2.gif' alt='Hufflepuff mascot'/>}\n              {userHouse === 'Ravenclaw' && <img className='mascot-img' src='https://i.pinimg.com/originals/35/4d/01/354d01e48c6acd596e48f6c4bbb3b7da.jpg' alt='Ravenclaw mascot'/> }\n              {userHouse === 'Slytherin' && <img className='mascot-img' src='https://www.pngkey.com/png/detail/226-2269266_slytherin-crest-png-harry-potter-slytherin-logo.png' alt='Slytherin mascot'/> }\n            </Link>\n            <NavLink to='/favourites'>\n              <h2 className='fav-link'>Favourite Spells</h2>\n            </NavLink>\n        </nav>\n    )\n}\n\nexport const mapStateToProps = ({userHouse, nameOfWizard}) => ({\n   userHouse,\n   nameOfWizard\n})\n\nNavBar.propTypes = {\n   userHouse: PropTypes.string,\n   nameOfWizard: PropTypes.string\n};\n\nexport default connect(mapStateToProps)(NavBar);","import React, { Component } from 'react';\nimport './SpellBook.css'; \nimport { connect } from 'react-redux';\nimport { addFavourite, deleteFavourite } from '../../actions';\nimport { bindActionCreators } from 'redux';\nimport { PropTypes } from 'prop-types';\n\nexport class SpellBook extends Component {\n  constructor() {\n    super();\n    this.state = {\n      chosenFavourite : !false\n    }\n  }\n\n  toggleFavourite = () => {\n   const { addFavourite, deleteFavourite, favouriteSpells, _id } = this.props;\n   this.setState({ chosenFavourite : !this.state.chosenFavourite })\n   favouriteSpells.includes(_id) ? deleteFavourite(_id) : addFavourite(_id);\n  } \n\n  render() {\n    // const { chosenFavourite } = this.state;\n    const { spell, type, effect, favouriteSpells, _id} = this.props;\n    const toggleWand = favouriteSpells.includes(_id) ? 'chosen-wand' : 'favourite-wand';\n    return (\n        <section className='spells' > \n            <div className='spell-container'>\n              <img onClick={() => this.toggleFavourite()} className={toggleWand} src='https://gamepress.gg/wizardsunite/sites/wizardsunite/files/2019-04/Luna%20Lovegood-foundable_0.png' alt='luna lovegood wand to favourite spell card' />\n              <div className='spell-info'>\n                <h3>{spell}</h3>\n                <h4>{type}</h4>\n                <p>This {type} {effect}</p>\n              </div>\n            </div>\n            <img className='paper-img' src='https://www.artsclip.com/background/XZHaFAgbeP-vintage-paper-scroll-for-short-news-slides.png' alt='background paper for spells' />\n        </section>\n    )\n  }\n}\n\nexport const mapStateToProps = ({userHouse, nameOfWizard, selectedSpell, spellBook, favouriteSpells }) => ({\n  userHouse,\n  nameOfWizard,\n  selectedSpell,\n  spellBook,\n  favouriteSpells\n})\n\nexport const mapDispatchToProps = (dispatch) => (\n  bindActionCreators({ \n    addFavourite,\n    deleteFavourite\n  }, dispatch)\n)\n\nSpellBook.propTypes = {\n  userHouse: PropTypes.string,\n  nameOfWizard: PropTypes.string,\n  selectedSpell: PropTypes.array,\n  spellBook: PropTypes.array,\n  favouriteSpells: PropTypes.array,\n  addFavourite: PropTypes.func,\n  deleteFavourite: PropTypes.func\n\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SpellBook);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { hasSpells, searchedSpell } from '../../actions';\nimport { PropTypes } from 'prop-types';\nimport './SpellsForm.css';\n\nclass SpellsForm extends Component {\n  constructor() {\n    super();\n    this.state = {\n      chosenSpell: '' \n    }\n  }\n\n  handleChange = (e) => {\n    this.setState({ [e.target.name] : e.target.value });\n  }\n\n  findSpell = (e) => {\n    e.preventDefault();\n    const { chosenSpell } = this.state;\n    const { spellBook, searchedSpell } = this.props;\n\n    let chosenOne = spellBook.filter((spell) => {\n        let lowerCaseSpells = spell.spell.toLowerCase();\n        return lowerCaseSpells.includes(chosenSpell.toLowerCase());\n      });\n\n     searchedSpell(chosenOne);\n\n    this.resetInputs();\n  }\n\n  resetInputs = () => {\n    this.setState({ chosenSpell : '' });\n  }\n\n  backToAllSpells = (e) => {\n    e.preventDefault();\n    const { spellBook, searchedSpell } = this.props;\n    searchedSpell(spellBook);\n  }\n\n  render() {\n      const { selectedSpell } = this.props;\n    return (\n        <form className='search-form'>\n           {selectedSpell.length <= 93 && <button className='all-spells-btn' onClick={this.backToAllSpells}>All Spells</button>}\n            <input className='search-spells'\n                    placeholder='Search for Spell'\n                    type='text'\n                    name='chosenSpell' \n                    value={this.state.chosenSpell}\n                    onChange={this.handleChange}/>\n            <button className='accio-btn' onClick={this.findSpell}>Accio!</button>\n        </form>\n    )\n  }\n}\n\nexport const mapStateToProps = ({spellBook, selectedSpell}) => ({\n    spellBook,\n    selectedSpell\n});\n\nexport const mapDispatchToProps = (dispatch) => (\n    bindActionCreators({\n      hasSpells: spells => dispatch( hasSpells(spells) ),\n      searchedSpell: spell => dispatch( searchedSpell(spell) )\n    }, dispatch)\n )\n\n SpellsForm.propTypes = {\n  spellBook: PropTypes.array,\n  selectedSpell: PropTypes.array,\n  searchedSpell: PropTypes.func,\n  hasSpells: PropTypes.func\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SpellsForm);","import React, { Component } from 'react';\nimport './SpellsFilter.css';\nimport { bindActionCreators } from 'redux';\nimport {  searchedSpell } from '../../actions';\nimport { connect } from 'react-redux';\nimport { PropTypes } from 'prop-types';\n\nclass SpellsFilter extends Component {\n\n    filterSpells = (type) => {\n        const { spellBook, searchedSpell } = this.props;\n      let clickedType = spellBook.filter((spell) => spell.type === type);\n      searchedSpell(clickedType);\n    }\n\n    render() { \n        return (\n            <section className='type-spell'>\n                <button onClick={() => this.filterSpells('Charm')}>Charm</button>\n                <button onClick={() => this.filterSpells('Enchantment')}>Enchantment</button>\n                <button onClick={() => this.filterSpells('Hex')}>Hex</button>\n                <button onClick={() => this.filterSpells('Spell')}>Spell</button>\n                <button onClick={() => this.filterSpells('Curse')}>Curse</button>\n                <button onClick={() => this.filterSpells('Jinx')}>Jinx</button>\n            </section>\n        )\n    }\n}\n\nexport const mapStateToProps = ({spellBook}) => ({\n    spellBook\n});\n\nexport const mapDispatchToProps = (dispatch) => (\n    bindActionCreators({\n      searchedSpell: spell => dispatch( searchedSpell(spell) )\n    }, dispatch)\n )\n\nSpellsFilter.propTypes = {\n    spellBook: PropTypes.array,\n    searchedSpell: PropTypes.func\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SpellsFilter);","import React from 'react';\nimport  NavBar from '../NavBar/NavBar';\nimport SpellBook from '../SpellBook/SpellBook';\nimport SpellsForm from '../SpellsForm/SpellsForm';\nimport SpellsFilter from '../SpellsFilter/SpellsFilter';\nimport { PropTypes } from 'prop-types';\n\nimport { bindActionCreators } from 'redux';\nimport { searchedSpell } from '../../actions';\nimport './SpellsContainer.css';\nimport { connect } from 'react-redux';\n\n\nexport const SpellsContainer  = ({ selectedSpell }) => {\n\n    const completeSpells = selectedSpell.map((spell) => {\n            return <SpellBook key={spell.id} {...spell}/>\n        }) \n\n    return (\n      <section className='spells-container'>\n           <NavBar />\n            <SpellsForm />\n            <SpellsFilter />\n            <div className='completed-spells'>\n              {completeSpells} \n            </div>\n        </section> \n    )\n}\n\nexport const mapStateToProps = ({ selectedSpell, spellBook }) => ({\n    selectedSpell,\n    spellBook\n})\n\nexport const mapDispatchToProps = (dispatch) => (\n  bindActionCreators({\n    searchedSpell: spell => dispatch( searchedSpell(spell) )\n  }, dispatch)\n)\n\nSpellsContainer.propTypes = {\n    selectedSpell: PropTypes.array,\n    spellBook: PropTypes.array,\n    searchedSpell: PropTypes.func\n};\n\nexport default connect(mapStateToProps)(SpellsContainer);","import React from 'react';\nimport { connect } from 'react-redux'; \nimport SpellBook from '../SpellBook/SpellBook';\nimport { Link } from 'react-router-dom';\nimport { PropTypes } from 'prop-types';\nimport './FavouritesContainer.css'; \n\nexport const FavouritesContainer = ({favouriteSpells, spellBook}) => {\n   const findSpell = favouriteSpells.map((id) => {\n    return spellBook.find((spell) => spell._id === id);\n  });\n\n  const favSpell = findSpell.map((spell) => {\n    return <SpellBook {...spell} />\n  })\n\n    return (\n      <section className='favourites-container'>\n          <Link to='/spells'>\n            <button className='back-btn-fav' >Back</button>\n          </Link>\n          <h2 className='favourites'>Favourite Spells</h2>\n          <div className='fav-spells'>\n            {favSpell}\n          </div>\n      </section>\n    )\n}\n\nexport const mapStateToProps = ({favouriteSpells, spellBook}) => ({\n    favouriteSpells,\n    spellBook\n})\n\nFavouritesContainer.propTypes = {\n  favouriteSpells: PropTypes.array, \n  spellBook: PropTypes.func\n}; \n\nexport default connect(mapStateToProps)(FavouritesContainer);","import React from 'react';\nimport HouseForm  from '../../Containers/HouseForm/HouseForm';\nimport  SpellsContainer  from '../../Containers/SpellsContainer/SpellsContainer';\nimport FavouritesContainer from '../../Containers/FavouritesContainer/FavouritesContainer';\nimport { Route } from 'react-router-dom';\nimport { PropTypes } from 'prop-types';\nimport './App.css';\n\nconst App = () => {\n    return (\n      <section>\n        <Route exact path='/' render={() => <HouseForm /> } />\n        <Route exact path='/spells' render={() => <SpellsContainer />} />\n        <Route exact path='/favourites' render={() => <FavouritesContainer /> } />\n      </section>\n    );\n}\n\nApp.propTypes = {\n  HouseForm: PropTypes.element,\n  SpellsContainer: PropTypes.element,\n  FavouritesContainer: PropTypes.element\n}; \n\nexport default App;\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from './reducers';\nimport { BrowserRouter } from 'react-router-dom'\nimport './index.css';\nimport App from './Components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(rootReducer, composeWithDevTools());\n\nReactDOM.render(\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>,\n    document.getElementById('root')\n  );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}